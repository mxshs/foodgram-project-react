name: Test & deploy pipeline

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: configure python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
      
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r /backend/foodgram_db/requirements.txt
    
    - name: run tests
      run: |
        python -m flake8
        
  build-and-push-container:
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        context: ./backend/foodgram_db
        push: true
        tags: mxshs/foodgram:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-container
    
    steps:
    - uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd foodgram-project-react/infra
          sudo docker compose stop
          sudo docker compose rm web -f
          rm .env && touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker compose up -d
          sudo docker compose exec web python manage.py migrate
          sudo docker compose exec web python manage.py collectstatic --no-input
  
  boot-notify:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Новый ${{ github.event_name }} в ${{ github.event.repository.name }}, ${{ github.workflow }} успешно пройден.
